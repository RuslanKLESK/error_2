=begin
5. 
+ Заданы три числа, которые обозначают число, месяц, год (запрашиваем у пользователя).
- Найти порядковый номер даты, начиная отсчет с начала года.
- Учесть, что год может быть високосным. (Запрещено использовать встроенные в ruby методы для этого вроде Date#yday или Date#leap?) Алгоритм опредления високосного года: http://www.adm.yar.ru/arch_serv/2000/Microsoft/content/vis.htm
=end


=begin
"Введите год:"
year = gets.chomp
if (year % 4 == 0) || (year % 400 == 0)
  day_in_year = 366
  year = y_v
else
end

if year % 100 == 0
  day_in_year = 365
else
end


# Век
vek = year.to_i / 100 

# Год
y = year.to_i - (vek.to_i * 100 )

# ПО месяцу и дню - понять какой день в диапазоне 1..365 или 366
"Введите месяц:"
mounth = gets.chomp
if mounth == 2 && day_feb == 29
	day_feb_v = 60
else
end

if mounth == 2 && day_feb == 28
	day_set = 60
else
end
day_set



Если year < 2000
XX: (50 – Yв/2 + dY) % 7 или (8 – Yв/2 % 7 + dY)
Если year > 2000
XXI: (7 – Yв/2 % 7 + dY)

вводим год 4 цифры
	- определяем век
	- определяем високосность
	- определить последние 2 цифры
	
день - диапазон от 1-31
	в зависимости от месяца 1-30 или 1-28 или 1-29

месяц- хэш массивов месяц - диапазон от 1 до 31
=end



# Найти порядковый номер даты, начиная отсчет с начала года
# Формула расчёта:
# день недели (x) = (день + код месяца + код года) % 7

# Тут сразусделать все сопоставления и расчёты для подготовки числа в формулу

# =================================================== ГОД ================================================================== ГОТОВО
# 1. Получаем code_y (код Века) от пользователя:
puts "Введите век, (Например для 2021г: 20, для 1980: 19): " # Чтобы не  c = century_bad.to_s.gsub(/([0-9]{2})/,'\1 ').strip
  c = gets.chomp
if c.to_i == (3 || 7 || 11 || 15 || 19 || 23 || 27 || 31)
  code_c = 0
elsif c.to_i == (2 || 6 || 10 || 14 || 18 || 22 || 26 || 30)
  code_c = 2
elsif c.to_i == (1 || 5 || 9 || 13 || 17 || 21 || 25 || 29)
  code_c = 4
elsif c.to_i == (4 || 8 || 12 || 16 || 20 || 24 || 28)
  code_c = 6
else
end

puts "Введите год (число, например формат ввода для 1980: 80): "
  y = gets.chomp

# Склеиваем значения СТРОК в 4-ёх численную СТРОКУ:
year = (c + y)
puts "Year = #{year}"	# Проверка

# Определим високосный ли год:
leap = (year.to_i % 4 == 0) || (year.to_i % 400 == 0)
not_leap = (year.to_i % 100 == 0)

code_y = (code_c.to_i + y.to_i + (y.to_i / 4)) % 7

# =================================================== МЕСЯЦ ==================================================================	ГОТОВО
# 3. Получаем code_m (месяц) от пользователя с проверкой високосного года:
puts "Укажите месяц (например формат ввода для Январь: январь): "	# Можно запросить число, соответствующее указанному месяцу, но поизнасилуем себе мозг.
  m = gets.chomp	# .donwcase
 
# 2 Расчитать код месяца:
# 1 — январь, октябрь;
# 2 — май;
# 3 — август;
# 4 — февраль, март, ноябрь;
# 5 — июнь;
# 6 — декабрь, сентябрь;
# 0 — апрель, июль.

if m.downcase == ("январь" || "октябрь")
  code_m = 1
elsif m.downcase == "май"
  code_m = 2
elsif m.downcase == "август"
  code_m = 3
elsif m.downcase == ("февраль" || "март" || "ноябрь")
  code_m = 4
elsif m.downcase == "июнь"
  code_m = 5
elsif m.downcase == ("декабрь" || "сентябрь")
  code_m = 6
elsif m.downcase == ("апрель" || "июль")
  code_m = 0
else
end

# =================================================== ДЕНЬ ================================================================== ГОТОВО
# Тупо день берём в переменную для формулы:
puts "Введите число от 1 до 31 (день): "
  d = gets.chomp

if d.to_i < 1
  puts "Введите число больше единицы"
  d = gets.chomp
elsif (year == not_leap) && (year != leap) && (m.downcase = "февраль") && (d.to.i >= 29)
  puts "Год не високосный. Максимальное значение для февраля: 28"
  d = gets.chomp
elsif
  (year == leap) && (m.donwcase = "февраль") && (d.to_i > 29)
  puts "Год високосный. Максимальное значение для февраль = 29"
  d = gets.chomp
elsif d.to_i > 31
  puts "Ввведите число меньше 31"
  d = gets.chomp
  else
end


# =================================================== ГОТОВО ==================================================================
# Выведем предваритеьные данные для расчёта:
puts "Date: Day: #{d} , Mounth: #{code_m} , Century: #{code_c}, Year: #{code_y} "  # Проверка

# ОСНОВНОЙ РАСЧЁТ ДНЯ НЕДЕЛИ (Х):
puts " "

x = (d.to_i + code_m.to_i + code_y.to_i) % 7
if x == 0
  puts "Порядковый день недели - Суббота"
elsif x == 1
  puts "Порядковый день недели - Воскресенье"
elsif x == 2
  puts "Порядковый день недели - Понедельник"
elsif x == 3
  puts "Порядковый день недели - Вторник"
elsif x == 4
  puts "Порядковый день недели - Среда"
elsif x == 5
  puts "Порядковый день недели - Четверг"
elsif x == 6
  puts "Порядковый день недели - Пятница"
else
end


=begin

abc_az = [ "СУББОТА", "ВОСКРЕСЕНЬЕ","ПОНЕДЕЛЬНИК", "ВТОРНИК", "СРЕДА", "ЧЕТВЕРГ", "ПЯТНИЦА" ]

abc_az = { '0' => "СУББОТА", '1' => "ВОСКРЕСЕНЬЕ", '2' => "ПОНЕДЕЛЬНИК", '3' => "ВТОРНИК", '4' => "СРЕДА", '5' => "ЧЕТВЕРГ", '6' => "ПЯТНИЦА" }

answer.each do | x, day | answer.include?(x)
if "#{x}" == @x
  puts "#{x}"
  else
  end
end



element = abc_az.find do |element| element.select
  if element.include?('0') || element.include?('1') || element.include?('2') || element.include?('3') || element.include?('4') || element.include?('5') || element.include?('6')
    puts "#{element}"
  else
  end
end

=end

=begin
# Учесть, что год может быть високосным.
if == year_vis


if (year % 4) == 0 || (year % 400) == 0
  year == year_vis
  elsif
  year % 100 == 0
  year != year_vis
  else
end
=end